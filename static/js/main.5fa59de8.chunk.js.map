{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","currentPage","onPageChange","total","perPage","totalPages","Math","ceil","numberingPages","firsPage","lastPage","className","cn","disabled","href","onClick","map","i","active","page","items","App","useState","setPage","sortOptional","setSortOptional","visibleItems","packItems","slice","itemsPerPage","firstItem","lastItem","length","value","onChange","e","target","id","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"gMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QAEMC,EAAaC,KAAKC,KAAKJ,EAAQC,GAC/BI,EAAiBd,EAAW,EAAGW,GAE/BI,EAA2B,IAAhBR,EACXS,EAAWT,IAAgBI,EAoBjC,OACE,qBAAIM,UAAU,aAAd,UAEE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAAUJ,IADd,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAvBa,WACdN,GACHP,EAAaD,EAAc,IAgBzB,oBAWDO,EAAeQ,KAAI,SAAAC,GAAC,OACnB,oBAEEN,UAAWC,IAAG,YACZ,CAAEM,OAAQjB,IAAgBgB,IAH9B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,UAAKG,GACTF,QAAS,WAjCO,IAACI,EACrBlB,KADqBkB,EAiCgBF,IA/BvCf,EAAaiB,IA2BT,SAMGF,KAVEA,MAcT,oBAAIN,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAzDa,WACdL,GACHR,EAAaD,EAAc,IAkDzB,wBCjEFmB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAmBb,IAAMuB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOH,EAAP,KAAaI,EAAb,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACMC,EApBR,YAAuD,IAA/BF,EAA8B,EAA9BA,aAChBG,EAAS,YAAOP,GAEtB,OAAQI,GACN,KAAK,EAQL,QACE,OAAOG,EAAUC,MAAM,EAAG,GAP5B,KAAK,EACH,OAAOD,EAAUC,MAAM,EAAG,GAC5B,KAAK,GACH,OAAOD,EAAUC,MAAM,EAAG,IAC5B,KAAK,GACH,OAAOD,EAAUC,MAAM,EAAG,KASTC,CAAa,CAAEL,iBAE9BM,GAAaX,EAAO,GAAKK,EACzBO,EAAWZ,EAAOK,EAAeJ,EAAMY,OACzCb,EAAOK,EACPJ,EAAMY,OAEV,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWQ,EADX,mBAC0BW,EAAY,EADtC,cAC6CC,EAD7C,eAC4DX,EAAMY,OADlE,OAIA,sBAAKrB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEsB,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,GAAiBU,EAAEC,OAAOH,QAC3C,UAAQ,kBACRI,GAAG,kBACH1B,UAAU,eALZ,UAOE,wBAAQsB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAO,GACPC,QAASoB,EACTvB,YAAakB,EACbjB,aAAcqB,IAGhB,6BACGG,EAAaV,KAAI,SAACuB,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3ElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5fa59de8.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  onPageChange,\n  total,\n  perPage,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const numberingPages = getNumbers(1, totalPages);\n\n  const firsPage = currentPage === 1;\n  const lastPage = currentPage === totalPages;\n\n  const moveNextPage = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const movePrevPage = () => {\n    if (!firsPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const moveToCurrentPage = (page: number) => {\n    if (currentPage === page) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n\n      <li className={cn('page-item',\n        { disabled: firsPage })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={movePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {numberingPages.map(i => (\n        <li\n          key={i}\n          className={cn('page-item',\n            { active: currentPage === i })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`${i}`}\n            onClick={() => moveToCurrentPage(i)}\n          >\n            {i}\n          </a>\n        </li>\n      ))}\n      <li className=\"page-item\">\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={moveNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\ninterface FilterParams {\n  sortOptional: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nfunction itemsPerPage({ sortOptional }: FilterParams) {\n  const packItems = [...items];\n\n  switch (sortOptional) {\n    case 3:\n      return packItems.slice(0, 3);\n    case 5:\n      return packItems.slice(0, 5);\n    case 10:\n      return packItems.slice(0, 10);\n    case 20:\n      return packItems.slice(0, 20);\n    default:\n      return packItems.slice(0, 3);\n  }\n}\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [sortOptional, setSortOptional] = useState(5);\n  const visibleItems = itemsPerPage({ sortOptional });\n\n  const firstItem = (page - 1) * sortOptional;\n  const lastItem = page * sortOptional < items.length\n    ? page * sortOptional\n    : items.length;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstItem + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={sortOptional}\n            onChange={(e) => setSortOptional(+e.target.value)}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={sortOptional}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}